{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleSubmit","e","preventDefault","contacts","props","find","item","toLowerCase","alert","onSubmit","resetForm","handleInputChange","target","value","setState","this","className","styles","form","labelTitle","type","input","onChange","pattern","title","required","button","Component","connect","items","dispatch","contact","filterValue","filter","onFilter","ev","filterContacts","normalizedFilter","includes","contactList","onDeleteContact","list","map","onClick","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ace1e517.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3sKyh\",\"button\":\"ContactList_button__23YSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1nrua\",\"input\":\"Filter_input__2P8Bw\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = {\n  addContact,\n  deleteContact,\n  changeFilter,\n};\n\nexport default contactsActions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (!this.state.name || !this.state.number) {\n      alert('Enter the name!');\n      return;\n    }\n\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} already exists. Try another name`);\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.labelTitle}>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={styles.input}\n            value={name}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={styles.labelTitle}>\n          Phone:\n          <input\n            type=\"text\"\n            name=\"number\"\n            className={styles.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The telephone number must contain numbers and may contain spaces, dashes, parentheses and may start with +\"\n            required\n            value={number}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filterValue, onFilter }) => {\n  return (\n    <form className={styles.form}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={filterValue}\n          onChange={onFilter}\n        />\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  filterValue: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilter: ev => dispatch(contactsActions.changeFilter(ev.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contactList.map(({ id, name, number }) => (\n        <li key={id} className={styles.item}>\n          <p>{name}: </p>\n          <p>{number}</p>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst filterContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contactList: filterContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nimport './styles.css';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst items = createReducer([], {\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n  [contactsActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'loading'} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__c3xQz\",\"labelTitle\":\"ContactForm_labelTitle__Kcsks\",\"input\":\"ContactForm_input__3qwjh\",\"button\":\"ContactForm_button__2sPQ8\"};"],"sourceRoot":""}